library(RMySql)
library(RMySQL
)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
exit
?knitr
library()
install.packages("knitr")
summary(cars)
plot(cars)
```{r karam, results = "asis", fig.width=7, fig.height=6}
getwd()
setwd("j:././././Coursera//R/ReproducibleResearch/Project1/RepData_PeerAssessment1/")
amd<-read.csv("./activity.csv",header=T,sep=",")
head(amd)
str(amd)
colSums(is.na(amd))
nrows(amd)
nrow(amd)
amd$date<-as.date(amd$date,"%Y-%m-%d")
amd$date<-as.Date(amd$date,"%Y-%m-%d")
str(amd)
```
library(lattice)
unique(amd$date)
hist(steps)
hist(amd$steps)
hist(log(amd$steps))
histogram(log(amd$steps))
histogram(log(amd$steps)|am$date)
histogram(log(amd$steps)|amd$date)
histogram(log(amd$steps)|factor(amd$date))
histogram(log(amd$steps)|as.factor(amd$date))
histogram(log(amd$steps)|as.POSIXct(amd$date))
histogram(log(amd$steps)|as.POSIXlt(amd$date))
read.csv("./activity.csv",header=T,sep=",")
amd<-read.csv("./activity.csv",header=T,sep=",")
str(amd)
library(lattice)
histogram(steps)
histogram(amd$steps)
histogram(amd$steps | date)
histogram(amd$steps | amd$date)
histogram(amd$steps | as.POSIXct(amd$date))
histogram(amd$steps | as.POSIXlt(amd$date))
?POSIXct
as.strptime(amd$date)
strptime(amd$date)
head(strptime(amd$date,"%Y-%m-%d"))
head(as.POSIXct(strptime(amd$date,"%Y-%m-%d")))
histogram(amd$steps | as.POSIXct(strptime(amd$date,"%Y-%m-%d")))
head(amd)
tapply(date,steps,mean)
tapply(amd$date,amd$steps,mean)
tapply(amd$steps,amd$date,mean)
tapply(amd$steps,amd$date,sum)
hist(tapply(amd$steps,amd$date,sum))
str(amd)
amd$date<-as.Date(amd$date)
str(amd)
hist(tapply(amd$steps,amd$date,sum))
tapply(amd$steps,amd$date,sum)
amdsteps$sum<-tapply(amd$steps,amd$date,sum)
amdsteps
as.data.frame(amdsteps)
amdsteps<-dataframe()
amdsteps<-data.frame()
amdsteps
amdsteps$sum<-tapply(amd$steps,amd$date,sum)
amdsteps<-tapply(amd$steps,amd$date,sum)
amdsteps
colnames(amdsteps)
names(amdsteps)
aggregate(amd$steps~amd$date,FUN=sum)
aggregate(amd$steps~amd$date,FUN=sum,na.rm=F)
hist(aggregate(amd$steps~amd$date,FUN=sum,na.rm=F))
colSums(is.na(amd))
colSums(amd$steps=0)
Sums(amd$steps=0)
Sum(amd$steps=0)
sum(amd$steps=0)
Sums(amd$steps==0)
colSums(amd$steps==0)
Sums(amd$steps==0)
Sum(amd$steps==0)
sum(amd$steps==0)
sum(amd$steps==1)
sum(amd$steps==17)
sum(ifelse(amd$steps==17),1,0)
sum(ifelse(amd$steps==17,1,0))
sum(ifelse(amd$steps==0,1,0))
sum(ifelse(amd$steps==0,0,1))
amd$steps
amdsteps
name12<-names(amdsteps)
name12
melt(amd,measure.vars=name12)
library(reshape2)
melt(amd,measure.vars=name12)
name12
name12<-as.Date(name12,"%Y-%m-%d")
name12
str(name12)
melt(amd,measure.vars=name12)
name12
melt(amd,measure.vars=c(2012-10-01,2012-10-02)
)
melt(amdsteps,measure.vars=c(2012-10-01,2012-10-02)
)
melt(amdsteps)
test<-melt(amdsteps)
hist(test)
str(test)
names(test)
names(test)<-c(date,sum)
names(test)
test
names(test)<-c(date1,sum1)
test1<-melt(amdsteps)
str(test1)
histogram(value|Var1)
histogram(test1$value|test$Var1)
test1
library(ggplot2)
qplot(test1$value)
qplot(test1$value,break=62)
qplot(test1$value,break==62)
qplot(test1$value)
qplot
qplot(value,data=test1,facets=Var1)
str(test1)
qplot(value,data=test1,facets=.~Var1)
qplot(value,data=test1,facets=Var1.~)
qplot(value,data=test1,facets=Var1~.)
qplot(value,data=test1,facets=Var1~.,binwidth=2)
qplot(value,data=test1,facets=Var1.~,binwidth=2)
qplot(value,data=test1,facets=.~Var1,binwidth=2)
histogram(value,data=test1)
qplot(value,data=test1)
test1
str(test1)
qplot(value,data=test1)
qplot(value,data=test1,binwidth=2)
qplot(value,data=test1,binwidth=1000)
qplot(value,data=test1,binwidth=1000,fill=Var1)
tapply(amd$steps,amd$date,sum)
amdsteps<-tapply(amd$steps,amd$date,sum)
amdmelt<-melt(amdsteps)
amdmelt
amdmelt<-melt(amdsteps)
amdmelt
names(amdmelt)
names(amdmelt)<-c("date1","sum")
names(amdmelt)
names(amdmelt)<-c("date1","sum1")
dcast(amdmelt,sum1,mean,median)
names(amdmelt)
dcast(amdmelt,date1~sum1,mean,median)
amdmelt
dcast(amdmelt,sum1~date1,mean,median)
tapply(data=amdmelt,sum1,date1,mean)
tapply(data=amdmelt,amdmelt$sum1,amdmelt$date1,mean)
tapply(amd,steps,date,mean)
tapply(amd$steps,amd$date,mean)
qplot(value,data=test1,binwidth=1000,fill=Var1)
qplot(data=amdmelt,sum1,fill=date1)
qplot(data=amdmelt,sum1,fill=date1,binwidth=5)
qplot(data=amdmelt,sum1,fill=date1)
qplot(data=amdmelt,sum1,fill=date1,binwidth=1000)
str(amdmelt)
amdmelt$date1<-as.POSIXct(amdmelt$date1,"%Y-%m-%d")
warnings
warnings()
amdmelt$date1<-as.POSIXct(striptime(amdmelt$date1),"%Y-%m-%d")
amdmelt$date1<-as.POSIXct(strptime(amdmelt$date1),"%Y-%m-%d")
amdmelt
str(amdmelt)
qplot(data=amdmelt,date1,fill=sum1)
warnings()
?median()
tapply(amd$steps,amd$date,mean)
tapply(amd$steps,amd$date,median)
tapply(amd$steps,amd$date,median,na.rm=T)
tapply(amd$steps,amd$date,FUN=median)
tapply(amd$steps,amd$date,sum)
tapply(amd$steps,amd$date,sum/n)
tapply(amd$steps,amd$date,sum/length(steps))
tapply(amd$steps,amd$date,sum/length(amd4steps))
tapply(amd$steps,amd$date,sum/length(amd$steps))
tapply(amd$steps,amd$date,FUN=sum/length(amd$steps))
tapply(amd$date,amd$steps,FUN=median)
tapply(amd$date,amd$steps,FUN=median)
tapply(amd$steps,amd$date,FUN=median)
str(amd)
tapply(amd$steps,factor(amd$date),FUN=median)
aggregate(amd$steps,factor(amd$date),FUN=median)
aggregate(data=amd,amd$steps,factor(amd$date),FUN=median)
aggregate(data=amd,amd$steps~amd$date,FUN=median)
aggregate(data=amd,amd$steps~as.factor(amd$date),FUN=median)
plot(date~steps,data=amd,type="l")
plot(date~steps,data=amd,type="l")
str(amd)
plot(steps~interval,data=amd,type="l")
amd2<-amd[,c(2,3)]
melt(amd2)
amd2<-amd[,c(2,3)]
head(amd2)
amd2<-amd[,c(1,3)]
head(amd2)
melt(amd2,measure.vars="interval")
head(melt(amd2,measure.vars="interval"))
amd2
head(amd2)
dcast(interval~steps,FUN=mean)
dcast(interval~steps,FUN=mean),na.rm=T
dcast(interval~steps,FUN=mean),na.rm=T)
dcast(interval~steps,FUN=mean,na.rm=T)
head(amdmelt)
mean(amdmelt$sum1)
mean(amdmelt$sum1,na.rm=T)
apply(data=amdmelt,sum1,FUN=c(mean,median),rm=T)
apply(data=amdmelt,sum1,FUN=c(mean,median),na.rm=T)
apply(data=amdmelt,sum1,FUN=mean,na.rm=T)
apply(data=amdmelt,2,FUN=c(mean,median),na.rm=T)
median(amdmelt$sum1,na.rm=T)
mean(amdmelt$sum1,na.rm=T);median(amdmelt$sum1,na.rm=T)
head(amd)
dcast(interval~steps,FUN=mean)
dcast(interval~steps,FUN=mean,na.rm=T
)
dcast(amd,interval~steps,mean)
dcast(amd,steps~interval,mean)
str(amd)
unique(amd)
unique(amd$interval)
amd$interval<-as.factor(amd$interval)
str(amd)
dcast(amd,interval~steps,mean)
tapply(amd$steps,amd$interval,mean)
tapply(amd$steps,amd$interval,mean,na.rm=T
)
#amdmelt_avg<-melt(am)
amdavg<-tapply(amd$steps,amd$interval,mean,na.rm=T)
amdmelt_avg<-melt(amdavg)
head(amdmelt)
head(amdmelt_avg)
names(amdmelt_avg)<-c("interval","avg")
plot(interval~avg,data=amdmelt_avg,type="l")
plot(avg~interval,data=amdmelt_avg,type="l")
nrow(amdmelt_avg)
max(amdmelt_avg$avg)
amdmelt[max(amdmelt_avg$avg),]
amdmelt_avg[max(amdmelt_avg$avg),]
amdmelt_avg
max(amdmelt_avg$avg)
max(amdmelt_avg$avg)
subset(amdmelt,max(amdmelt_avg$avg),select=c("interval","avg")
)
subset(amdmelt,max(amdmelt_avg$avg),select=c(interval,avg))
amdmelt_avg[amdmelt_avg$avg=max(amdmelt_avg$avg),]
amdmelt_avg[amdmelt_avg$avg==max(amdmelt_avg$avg),]
amdimpute<-amd
amdimpute$steps[is.na(amdimpute$steps)]<-mean(amdimpute$,na.rm=T)
amdimpute$steps[is.na(amdimpute$steps)]<-mean(amdimpute$steps,na.rm=T)
colSUms(is.na(amdimputes))
colSums(is.na(amdimputes))
colSums(is.na(amdimpute))
colSums(amd)
colSums(is.na(amd))
calc_day_of_week_data <- function(amd) {
amd$weekday <- as.factor(weekdays(amd$date))
weekend_data <- subset(amd, weekday %in% c("Saturday","Sunday"))
weekday_data <- subset(amd, !weekday %in% c("Saturday","Sunday"))
weekend_spi <- calc_steps_per_interval(weekend_data)
weekday_spi <- calc_steps_per_interval(weekday_data)
weekend_spi$dayofweek <- rep("weekend", nrow(weekend_spi))
weekday_spi$dayofweek <- rep("weekday", nrow(weekday_spi))
day_of_week_data <- rbind(weekend_spi, weekday_spi)
day_of_week_data$dayofweek <- as.factor(day_of_week_data$dayofweek)
day_of_week_data
}
plot_day_of_week_comparison <- function(dow_data) {
ggplot(dow_data,
aes(x=interval, y=steps)) +
geom_line(color="steelblue", size=1) +
facet_wrap(~ dayofweek, nrow=2, ncol=1) +
labs(x="Interval", y="Number of steps") +
theme_bw()
}
day_of_week_data <- calc_day_of_week_data(complete_amd)
plot_day_of_week_comparison(day_of_week_data)
```
day_of_week_data <- calc_day_of_week_data(amdimpute)
head(amd$date)
weekdays(amd$date)
str(amd)
amd$weekday <- as.factor(weekdays(amd$date))
weekend_data <- subset(amd, weekday %in% c("Saturday","Sunday"))
weekday_data <- subset(amd, !weekday %in% c("Saturday","Sunday"))
head(amd)
tail(amd)
weekend_spi <- calc_steps_per_interval(weekend_data)
head(amdmelt)
str(ammelt)
str(amdelt)
str(amdmelt)
amdmelt$date<-as.Date(amdmelt$date)
amdmelt$date1<-as.Date(amdmelt$date1)
head(amdmelt)
str(amdmelt)
amdmelt<-amdmelt[,c(1,2)]
str(amdmelt)
amdmelt
head(weekdays(amdmelt$date1))
head(weekdays(amdmelt$date1),n=30)
amdmelt$weekdays<-weekdays(amdmelt$date1)
head(amdmelt)
amdmelt[amdmelt$weekdays=="Saturday" | amdmelt$weekdays=="Sunday",]
amdmelt$weeks[amdmelt$weekdays=="Saturday" | amdmelt$weekdays=="Sunday"]<-"weekends"
amdmelt[amdmelt$weekdays=="Saturday" | amdmelt$weekdays=="Sunday",]
amdmelt[!amdmelt$weekdays=="Saturday" | amdmelt$weekdays=="Sunday",]
amdmelt[!amdmelt$weekdays=="Saturday" | ! amdmelt$weekdays=="Sunday",]
amdmelt[!(amdmelt$weekdays=="Saturday" | amdmelt$weekdays=="Sunday"),]
amdmelt$weeks[!(amdmelt$weekdays=="Saturday" | amdmelt$weekdays=="Sunday")]<-"weekends"
amdmelt[!(amdmelt$weekdays=="Saturday" | amdmelt$weekdays=="Sunday"),]
amdmelt$weeks[!(amdmelt$weekdays=="Saturday" | amdmelt$weekdays=="Sunday")]<-"weekdays"
amdmelt[!(amdmelt$weekdays=="Saturday" | amdmelt$weekdays=="Sunday"),]
amdmelt[(amdmelt$weekdays=="Saturday" | amdmelt$weekdays=="Sunday"),]
ggplot(amdmelt,
aes(x=interval, y=steps)) +
geom_line(color="steelblue", size=1) +
facet_wrap(~ weeks, nrow=2, ncol=1) +
labs(x="Interval", y="Number of steps") +
theme_bw()
amdmelt[amdmelt$weekdays=="Saturday" | amdmelt$weekdays=="Sunday",]
amd$weekdays<-weekdays(amd$date1)
str(amd)
amd$weekdays<-weekdays(amd$date)
amd$weeks[(amd$weekdays=="Saturday" | amd$weekdays=="Sunday")]<-"weekend"
amd$weeks[!(amd$weekdays=="Saturday" | amd$weekdays=="Sunday")]<-"weekdays"
head(amd)
tail(amd)
tail(amd,n=30)
head(amdimpute)
amdimpute$weekdays<-weekdays(amdimpute$date)
amdimpute$weeks[(amdimpute$weekdays=="Saturday" | amdimpute$weekdays=="Sunday")]<-"weekend"
amdimpute$weeks[!(amdimpute$weekdays=="Saturday" | amdimpute$weekdays=="Sunday")]<-"weekdays"
amdimpute[amdimpute$weekdays=="Saturday" | amdimpute$weekdays=="Sunday",]
head(amdimpute)
ggplot(amdimpute,
aes(x=interval, y=steps)) +
geom_line(color="steelblue", size=1) +
facet_wrap(~ weeks, nrow=2, ncol=1) +
labs(x="Interval", y="Number of steps") +
theme_bw()
str(amdimpute)
nrow(amdimpute)
head(amdmelt_avg)
xyplot(interval~steps | weekdays)
xyplot(interval~steps | weekdays,data=amdimpute)
xyplot(interval~steps | weeks,data=amdimpute)
xyplot(steps~interval | weeks,data=amdimpute)
xyplot(steps~interval | weeks,data=amdimpute,type="l")
xyplot(steps~interval | weeks,data=amdimpute,type="l",labs(x="Interval", y="Number of steps"))
xyplot(steps~interval | weeks,data=amdimpute,type="l",xlab="Interval", ylab="Number of steps")
str(amdimput)e
str(amdimpute)
nrow(amdimpute)
nrow(unique(amdimpute$interval)
)
unique(amdimpute$interval)
nrow(amdimpute)
tbl$weekday <- as.factor(weekdays(tbl$date))
amdimpute$weekday <- as.factor(weekdays(amdimpute$date))
weekend_data <- subset(amdimpute, weekday %in% c("Saturday","Sunday"))
weekday_data <- subset(amdimpute, !weekday %in% c("Saturday","Sunday"))
weekend_spi <- amdmelt_avg(weekend_data)
weekday_spi <- amdmelt_avg(weekday_data)
calc_steps_per_interval <- function(amdimpute) {
steps_pi <- aggregate(amdimpute$steps, by=list(interval=amdimpute$interval),
FUN=mean, na.rm=T)
# convert to integers for plotting
steps_pi$interval <- as.integer(levels(steps_pi$interval)[steps_pi$interval])
colnames(steps_pi) <- c("interval", "steps")
steps_pi
}
calc_day_of_week_data <- function(amdimpute) {
amdimpute$weekday <- as.factor(weekdays(amdimpute$date))
weekend_data <- subset(amdimpute, weekday %in% c("Saturday","Sunday"))
weekday_data <- subset(amdimpute, !weekday %in% c("Saturday","Sunday"))
weekend_spi <- calc_steps_per_interval(weekend_data)
weekday_spi <- calc_steps_per_interval(weekday_data)
weekend_spi$dayofweek <- rep("weekend", nrow(weekend_spi))
weekday_spi$dayofweek <- rep("weekday", nrow(weekday_spi))
day_of_week_data <- rbind(weekend_spi, weekday_spi)
day_of_week_data$dayofweek <- as.factor(day_of_week_data$dayofweek)
day_of_week_data
}
plot_day_of_week_comparison <- function(dow_data) {
ggplot(dow_data,
aes(x=interval, y=steps)) +
geom_line(color="steelblue", size=1) +
facet_wrap(~ dayofweek, nrow=2, ncol=1) +
labs(x="Interval", y="Number of steps") +
theme_bw()
}
day_of_week_data <- calc_day_of_week_data(complete_amdimpute)
day_of_week_data <- calc_day_of_week_data(amdimpute)
plot_day_of_week_comparison(day_of_week_data)
xyplot(x=interval, y=steps| dayofweek, data=day_of_week_data)
xyplot(x=interval, y=steps| dayofweek, data=day_of_week_data)
str(day_of_week_data)
xyplot(interval~steps| dayofweek, data=day_of_week_data)
xyplot(interval~steps| dayofweek, data=day_of_week_data,typ="l")
xyplot(steps~interval| dayofweek, data=day_of_week_data,typ="l")
head(steps_pi)
xyplot(steps~interval| dayofweek, data=day_of_week_data,typ="l",layout=c(1,2))
amdimpute$weekday <- as.factor(weekdays(amdimpute$date))
weekend_data <- subset(amdimpute, weekday %in% c("Saturday","Sunday"))
weekday_data <- subset(amdimpute, !weekday %in% c("Saturday","Sunday"))
weekend_spi <- avg_interval(weekend_data)
weekday_spi <- avg_interval(weekday_data)
weekend_spi$dayofweek <- rep("weekend", nrow(weekend_spi))
weekday_spi$dayofweek <- rep("weekday", nrow(weekday_spi))
day_of_week_data <- rbind(weekend_spi, weekday_spi)
day_of_week_data$dayofweek <- as.factor(day_of_week_data$dayofweek)
avg_interval <- function(amdimpute)
{
steps_pi <- aggregate(amdimpute$steps, by=list(interval=amdimpute$interval),
FUN=mean, na.rm=T)
# convert to integers for plotting
steps_pi$interval <- as.integer(levels(steps_pi$interval)[steps_pi$interval])
colnames(steps_pi) <- c("interval", "steps")
steps_pi
}
amdimpute$weekday <- as.factor(weekdays(amdimpute$date))
weekend_data <- subset(amdimpute, weekday %in% c("Saturday","Sunday"))
weekday_data <- subset(amdimpute, !weekday %in% c("Saturday","Sunday"))
weekend_spi <- avg_interval(weekend_data)
weekday_spi <- avg_interval(weekday_data)
weekend_spi$dayofweek <- rep("weekend", nrow(weekend_spi))
weekday_spi$dayofweek <- rep("weekday", nrow(weekday_spi))
day_of_week_data <- rbind(weekend_spi, weekday_spi)
day_of_week_data$dayofweek <- as.factor(day_of_week_data$dayofweek)
day_of_week_data <- week_data(amdimpute)
xyplot(steps~interval| dayofweek, data=day_of_week_data,typ="l",layout=c(1,2))
week_data <- function(amdimpute)
{
amdimpute$weekday <- as.factor(weekdays(amdimpute$date))
weekend_data <- subset(amdimpute, weekday %in% c("Saturday","Sunday"))
weekday_data <- subset(amdimpute, !weekday %in% c("Saturday","Sunday"))
weekend_spi <- avg_interval(weekend_data)
weekday_spi <- avg_interval(weekday_data)
weekend_spi$dayofweek <- rep("weekend", nrow(weekend_spi))
weekday_spi$dayofweek <- rep("weekday", nrow(weekday_spi))
day_of_week_data <- rbind(weekend_spi, weekday_spi)
day_of_week_data$dayofweek <- as.factor(day_of_week_data$dayofweek)
day_of_week_data
}
day_of_week_data <- week_data(amdimpute)
xyplot(steps~interval| dayofweek, data=day_of_week_data,typ="l",layout=c(1,2))
head(steps_pi)
weekend_spi <- amdimpute_avg$weekend_data
weekend_spi <- amdmelt_avg$weekend_data
head(weekend_spi)
avg_interval <- function(amdimpute)
{
steps_pi <- aggregate(amdimpute$steps, by=list(interval=amdimpute$interval),
FUN=mean, na.rm=T)
# convert to integers for plotting
steps_pi$interval <- as.integer(levels(steps_pi$interval)[steps_pi$interval])
colnames(steps_pi) <- c("interval", "steps")
steps_pi
}
```
source('~/.active-rstudio-document', echo=TRUE)
day_of_week_data <- calc_day_of_week_data(amdimpute)
#amdmelt$weeks[!(amdmelt$weekdays=="Saturday" | amdmelt$weekdays=="Sunday")]<-"weekends"
?rep
weekend_spi <- amdmelt$weeks[(amdmelt$weekdays=="Saturday" | amdmelt$weekdays=="Sunday")]
weekday_spi <- amdmelt$weeks[!(amdmelt$weekdays=="Saturday" | amdmelt$weekdays=="Sunday")]
weekend_spi$dayofweek <- rep("weekend", nrow(weekend_spi))
weekday_spi$dayofweek <- rep("weekday", nrow(weekday_spi))
day_of_week_data <- rbind(weekend_spi, weekday_spi)
day_of_week_data$dayofweek <- as.factor(day_of_week_data$dayofweek)
day_of_week_data
weekend_spi
weekdays_spi
weekday_spi
weekend_spi <- amdmelt[(amdmelt$weekdays=="Saturday" | amdmelt$weekdays=="Sunday")]
weekday_spi <- amdmelt[!(amdmelt$weekdays=="Saturday" | amdmelt$weekdays=="Sunday")]
weekend_spi$dayofweek <- rep("weekend", nrow(weekend_spi))
weekday_spi$dayofweek <- rep("weekday", nrow(weekday_spi))
weekend_spi <- amdmelt[(amdmelt$weekdays=="Saturday" | amdmelt$weekdays=="Sunday"),]
weekday_spi <- amdmelt[!(amdmelt$weekdays=="Saturday" | amdmelt$weekdays=="Sunday"),]
weekend_spi$dayofweek <- rep("weekend", nrow(weekend_spi))
weekday_spi$dayofweek <- rep("weekday", nrow(weekday_spi))
day_of_week_data <- rbind(weekend_spi, weekday_spi)
day_of_week_data$dayofweek <- as.factor(day_of_week_data$dayofweek)
day_of_week_data
xyplot(steps~interval| dayofweek, data=day_of_week_data,typ="l",layout=c(1,2),xlab="Interval",ylab="No of Steps")
xyplot(sum1~interval| dayofweek, data=day_of_week_data,typ="l",layout=c(1,2),xlab="Interval",ylab="No of Steps")
weekend_spi <- amd[(amd$weekdays=="Saturday" | amd$weekdays=="Sunday"),]
weekday_spi <- amd[!(amd$weekdays=="Saturday" | amd$weekdays=="Sunday"),]
weekend_spi$dayofweek <- rep("weekend", nrow(weekend_spi))
weekday_spi$dayofweek <- rep("weekday", nrow(weekday_spi))
day_of_week_data <- rbind(weekend_spi, weekday_spi)
day_of_week_data$dayofweek <- as.factor(day_of_week_data$dayofweek)
xyplot(steps~interval| dayofweek, data=day_of_week_data,typ="l",layout=c(1,2),xlab="Interval",ylab="No of Steps")
